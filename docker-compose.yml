version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: antrakt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/1-init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - antrakt_network
    restart: unless-stopped

  # MinIO Object Storage Service
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - antrakt_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # Backend Service (Django)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DEBUG: "False"
      DATABASE_HOST: postgres
      DATABASE_NAME: antrakt
      DATABASE_USER: postgres
      DATABASE_PASSWORD: 123
      DATABASE_PORT: "5432"
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET_NAME: antrakt-images
    volumes:
      - backend_media:/app/media
      - backend_static:/app/static
    networks:
      - antrakt_network
    depends_on:
      minio:
        condition: service_healthy
    command: >
      sh -c "python app/manage.py migrate &&
        gunicorn app.wsgi:application --bind 0.0.0.0:8000 --pythonpath /app/app"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 15s
      timeout: 15s
      retries: 15
      start_period: 60s
    restart: unless-stopped

  # Frontend Service (React)
  frontend:
    build:
      context: ./frontend/antrakt
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:8000
    networks:
      - antrakt_network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
  backend_media:
  backend_static:

networks:
  antrakt_network:
    driver: bridge